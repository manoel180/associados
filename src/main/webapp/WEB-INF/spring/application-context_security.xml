<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<!-- enable use-expressions -->
	<security:http auto-config="true" use-expressions="true">


		<security:intercept-url pattern="/login.jsf"
			access="permitAll" />

		<security:intercept-url pattern="/home.jsf"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/resources/**"
			access="permitAll" />
		<security:intercept-url pattern="/javax.faces.resource/**"
			access="permitAll" />


		<security:intercept-url pattern="/cadastros/usuario.jsf"
			access="hasAnyRole('Cadastrar_Usuario', 'Visualizar_Usuario')" />

		<security:intercept-url pattern="/cadastros/**"
			access="hasAnyRole('Cadastrar_Associado', 'Visualizar_Associado')" />

		<security:intercept-url pattern="/configuracoes/perfil/**"
			access="hasAnyRole('Cadastrar_Perfil', 'Visualizar_Perfil')" />

		<security:intercept-url pattern="/**"
			access="hasAnyRole('Cadastrar_Associado', 'Visualizar_Associado')" />


		<!-- access denied page -->
		<security:access-denied-handler
			error-page="/home.jsf" />

		<security:form-login login-page="/login.jsf"
			default-target-url="/home.jsf" authentication-failure-url="/login.jsf?error" />
		<security:logout logout-success-url="/login.jsf?logout" />

		<!-- enable csrf protection -->
		<security:csrf />
		<security:session-management
			invalid-session-url="/login.jsf">
			<security:concurrency-control
				max-sessions="1" error-if-maximum-exceeded="true" expired-url="/login.jsf" />
		</security:session-management>
	</security:http>

	<!-- Select users and user_roles from database -->
	<!-- Authentication manager. -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:jdbc-user-service role-prefix=""
				data-source-ref="dataSource"
				users-by-username-query="select login, senha, ativo from usuarios where login = ?"
				authorities-by-username-query="select login, role from getUser where login =?  " />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>